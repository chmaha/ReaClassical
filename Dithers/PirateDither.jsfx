Version: 1.0
desc: PirateDither (chmaha)
author: chmaha
about:
  Uses DSP from airwindows "DitherMeTimbers" and "DitherMeDiskers" by Chris Johnson
  https://github.com/airwindows/airwindows/tree/master/plugins/LinuxVST/src/DitherMeTimbers (MIT License)
  https://github.com/airwindows/airwindows/tree/master/plugins/LinuxVST/src/DitherMeDiskers (MIT License)
  JSFX version released under GPLv3 license

slider1:0<0,1,1{Blackbeard 16-bit,Long Ben 24-bit}>Bitdepth

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init

@slider

noiseShapingL = 0.0;
noiseShapingR = 0.0;
lastSampleL = 0.0;
lastSample2L = 0.0;
lastSampleR = 0.0;
lastSample2R = 0.0;

@block

@sample

inputSampleL = spl0;
inputSampleR = spl1;

(slider1 == 0) ? (
  inputSampleL = inputSampleL * 32768.0;
  inputSampleR = inputSampleR * 32768.0;
) : (
  inputSampleL = inputSampleL * 8388608.0;
  inputSampleR = inputSampleR * 8388608.0;
);

lastSampleL -= (noiseShapingL*0.125);
lastSampleR -= (noiseShapingR*0.125);

((lastSampleL+lastSampleL) >= (inputSampleL+lastSample2L)) ? outputSampleL = floor(lastSampleL)
: outputSampleL = floor(lastSampleL+1.0);

((lastSampleR+lastSampleR) >= (inputSampleR+lastSample2R)) ? outputSampleR = floor(lastSampleR)
: outputSampleR = floor(lastSampleR+1.0);

lastSample2L = lastSampleL;
lastSampleL = inputSampleL;

lastSample2R = lastSampleR;
lastSampleR = inputSampleR;

noiseShapingL += outputSampleL;
noiseShapingL -= lastSampleL;

noiseShapingR += outputSampleR;
noiseShapingR -= lastSampleR;

(slider1 == 0) ? (
  (outputSampleL > 32760.0) ? (
    outputSampleL = 32760.0;
    noiseShapingL *= 0.5;
  );
  (outputSampleR > 32760.0) ? (
    outputSampleR = 32760.0;
    noiseShapingR *= 0.5;
  );
  (outputSampleL < -32760.0) ? (
    outputSampleL = -32760.0;
    noiseShapingL *= 0.5;
  );
  (outputSampleR < -32760.0) ? (
    outputSampleR = -32760.0;
    noiseShapingR *= 0.5;
  );    
  
  outputSampleL = outputSampleL / 32768.0;
  outputSampleR = outputSampleR / 32768.0;
  
) : (
  (outputSampleL > 8388600.0) ? (
    outputSampleL = 8388600.0;
    noiseShapingL *= 0.5;
  );
  (outputSampleR > 8388600.0) ? (
    outputSampleR = 8388600.0;
    noiseShapingR *= 0.5;
  );
  (outputSampleL < -8388600.0) ? (
    outputSampleL = -8388600.0;
    noiseShapingL *= 0.5;
  );
  (outputSampleR < -8388600.0) ? (
    outputSampleR = -8388600.0;
    noiseShapingR *= 0.5;
  );  
  
  outputSampleL = outputSampleL / 8388608.0;
  outputSampleR = outputSampleR / 8388608.0;
  
);

spl0 = outputSampleL;
spl1 = outputSampleR;
