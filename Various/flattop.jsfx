Version: 1.2
desc:Flattop Clipper (chmaha)
author: chmaha
about:
  Uses DSP from airwindows "ClipOnly2" by Chris Johnson
  https://github.com/airwindows/airwindows/tree/master/plugins/LinuxVST/src/ClipOnly2 (MIT License)
  JSFX version released under GPLv3 license

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
freemem = 0;
intermediateL = freemem; freemem+=16;
intermediateR = freemem; freemem+=16;

lastSampleL = 0.0;
wasPosClipL = 0;
wasNegClipL = 0;
lastSampleR = 0.0;
wasPosClipR = 0;
wasNegClipR = 0;
x = 0; while(x < 16) (intermediateL[x] = 0.0; intermediateR[x] = 0.0;x+=1;);

@slider


@block
overallscale = 1.0;
overallscale /= 44100.0; 
overallscale *= srate;

spacing = floor(overallscale); 
(spacing < 1) ? spacing = 1; (spacing > 16) ? spacing = 16;

@sample
inputSampleL = spl0;
inputSampleR = spl1;

(inputSampleL > 4.0) ? inputSampleL = 4.0; (inputSampleL < -4.0) ? inputSampleL = -4.0;
(wasPosClipL == 1) ? ( 
  (inputSampleL<lastSampleL) ? lastSampleL=0.7058208+(inputSampleL*0.2609148)
  : lastSampleL = 0.2491717+(lastSampleL*0.7390851);); 
  wasPosClipL = 0;
(inputSampleL>0.9549925859) ? (wasPosClipL=1;inputSampleL=0.7058208+(lastSampleL*0.2609148););
(wasNegClipL == 1) ? ( 
  (inputSampleL > lastSampleL) ? lastSampleL=-0.7058208+(inputSampleL*0.2609148)
  : lastSampleL=-0.2491717+(lastSampleL*0.7390851);); 
  wasNegClipL = 0;
(inputSampleL<-0.9549925859) ? (wasNegClipL=1;inputSampleL=-0.7058208+(lastSampleL*0.2609148););
intermediateL[spacing] = inputSampleL;
    inputSampleL = lastSampleL; 
x = spacing; while(x > 0) (intermediateL[x-1] = intermediateL[x];x-=1;);
lastSampleL = intermediateL[0]; 

(inputSampleR > 4.0) ? inputSampleR = 4.0; (inputSampleR < -4.0) ? inputSampleR = -4.0;
(wasPosClipR == 1) ? ( 
  (inputSampleR<lastSampleR) ? lastSampleR=0.7058208+(inputSampleR*0.2609148)
  : lastSampleR = 0.2491717+(lastSampleR*0.7390851);); 
  wasPosClipR = 0;
(inputSampleR>0.9549925859) ? (wasPosClipR=1;inputSampleR=0.7058208+(lastSampleR*0.2609148););
(wasNegClipR == 1) ? ( 
  (inputSampleR > lastSampleR) ? lastSampleR=-0.7058208+(inputSampleR*0.2609148)
  : lastSampleR=-0.2491717+(lastSampleR*0.7390851);); 
  wasNegClipR = 0;
(inputSampleR<-0.9549925859) ? (wasNegClipR=1;inputSampleR=-0.7058208+(lastSampleR*0.2609148););
intermediateR[spacing] = inputSampleR; 
    inputSampleR = lastSampleR;
x = spacing; while(x > 0) (intermediateR[x-1] = intermediateR[x];x-=1;);
lastSampleR = intermediateR[0]; 

spl0 = inputSampleL;
spl1 = inputSampleR;


