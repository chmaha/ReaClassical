Version: 1.2
desc:Aurora Exciter (chmaha)
author: chmaha
about:
  Uses DSP from airwindows "Dubly" by Chris Johnson
  https://github.com/airwindows/airwindows/tree/master/plugins/LinuxVST/src/Dubly (MIT License)
  JSFX version released under GPLv3 license

slider1:50<0,100,0.1>Ionization %
slider2:1<0,1,0.01>Dry/Wet

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
freemem = 0;

UINT32_MAX = 4294967295;
M_PI = 3.1415926535897932384626433;



@slider

A = slider1/100;
B = slider2;


@block
overallscale = 1.0;
overallscale /= 44100.0;
overallscale *= srate;

dublyAmount = pow(A,3)*0.16;
outlyAmount = pow(A,3)*0.160618;
gain = outlyAmount+1.0;
iirAmount = 0.4275/overallscale;
wet = B;

@sample
inputSampleL = spl0;
inputSampleR = spl1;


drySampleL = inputSampleL;
drySampleR = inputSampleR;

iirSampleAL = (iirSampleAL * (1.0 - iirAmount)) + (inputSampleL * iirAmount);
doubly = inputSampleL - iirSampleAL;
(doubly > 1.0) ? doubly = 1.0; (doubly < -1.0) ? doubly = -1.0;
(doubly > 0) ? doubly = log(1.0+(255*abs(doubly)))/2.40823996531;
(doubly < 0) ? doubly = -log(1.0+(255*abs(doubly)))/2.40823996531;
inputSampleL += doubly*dublyAmount;

iirSampleAR = (iirSampleAR * (1.0 - iirAmount)) + (inputSampleR * iirAmount);
doubly = inputSampleR - iirSampleAR;
(doubly > 1.0) ? doubly = 1.0; (doubly < -1.0) ? doubly = -1.0;
(doubly > 0) ? doubly = log(1.0+(255*abs(doubly)))/2.40823996531;
(doubly < 0) ? doubly = -log(1.0+(255*abs(doubly)))/2.40823996531;
inputSampleR += doubly*dublyAmount;

inputSampleL *= gain;
inputSampleL = sin(inputSampleL);
inputSampleL /= gain;

inputSampleR *= gain;
inputSampleR = sin(inputSampleR);
inputSampleR /= gain;

iirSampleBL = (iirSampleBL * (1.0 - iirAmount)) + (inputSampleL * iirAmount);
doubly = inputSampleL - iirSampleBL;
(doubly > 1.0) ? doubly = 1.0; (doubly < -1.0) ? doubly = -1.0;
(doubly > 0) ? doubly = log(1.0+(255*abs(doubly)))/2.40823996531;
(doubly < 0) ? doubly = -log(1.0+(255*abs(doubly)))/2.40823996531;
inputSampleL -= doubly*outlyAmount;

iirSampleBR = (iirSampleBR * (1.0 - iirAmount)) + (inputSampleR * iirAmount);
doubly = inputSampleR - iirSampleBR;
(doubly > 1.0) ? doubly = 1.0; (doubly < -1.0) ? doubly = -1.0;
(doubly > 0) ? doubly = log(1.0+(255*abs(doubly)))/2.40823996531;
(doubly < 0) ? doubly = -log(1.0+(255*abs(doubly)))/2.40823996531;
inputSampleR -= doubly*outlyAmount;
//end Dubly decode

(wet !=1.0) ? (
  inputSampleL = (inputSampleL * wet) + (drySampleL * (1.0-wet));
  inputSampleR = (inputSampleR * wet) + (drySampleR * (1.0-wet));
);




spl0 = inputSampleL;
spl1 = inputSampleR;
